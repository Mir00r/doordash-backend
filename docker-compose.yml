version: '3.8'

services:
  # API Gateway
  api-gateway:
    build: ./services/api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_GATEWAY_ROUTES[0].ID=auth-service
      - SPRING_CLOUD_GATEWAY_ROUTES[0].URI=http://auth-service:8081
      - SPRING_CLOUD_GATEWAY_ROUTES[0].PREDICATES[0]=Path=/api/v1/auth/**
      - SPRING_CLOUD_GATEWAY_ROUTES[1].ID=restaurant-service
      - SPRING_CLOUD_GATEWAY_ROUTES[1].URI=http://restaurant-service:8082
      - SPRING_CLOUD_GATEWAY_ROUTES[1].PREDICATES[0]=Path=/api/v1/restaurants/**,/api/v1/menu-items/**
      - SPRING_CLOUD_GATEWAY_ROUTES[2].ID=order-service
      - SPRING_CLOUD_GATEWAY_ROUTES[2].URI=http://order-service:8083
      - SPRING_CLOUD_GATEWAY_ROUTES[2].PREDICATES[0]=Path=/api/v1/orders/**,/api/v1/carts/**
      - SPRING_CLOUD_GATEWAY_ROUTES[3].ID=user-service
      - SPRING_CLOUD_GATEWAY_ROUTES[3].URI=http://user-service:8084
      - SPRING_CLOUD_GATEWAY_ROUTES[3].PREDICATES[0]=Path=/api/v1/users/**,/api/v1/addresses/**
      - SPRING_CLOUD_GATEWAY_ROUTES[4].ID=delivery-service
      - SPRING_CLOUD_GATEWAY_ROUTES[4].URI=http://delivery-service:8085
      - SPRING_CLOUD_GATEWAY_ROUTES[4].PREDICATES[0]=Path=/api/v1/deliveries/**,/api/v1/drivers/**
      - SPRING_CLOUD_GATEWAY_ROUTES[5].ID=payment-service
      - SPRING_CLOUD_GATEWAY_ROUTES[5].URI=http://payment-service:8086
      - SPRING_CLOUD_GATEWAY_ROUTES[5].PREDICATES[0]=Path=/api/v1/payments/**
      - SPRING_CLOUD_GATEWAY_ROUTES[6].ID=notification-service
      - SPRING_CLOUD_GATEWAY_ROUTES[6].URI=http://notification-service:8087
      - SPRING_CLOUD_GATEWAY_ROUTES[6].PREDICATES[0]=Path=/api/v1/notifications/**
    networks:
      - doordash-network
    depends_on:
      - auth-service
      - restaurant-service
      - order-service
      - user-service
      - delivery-service
      - payment-service
      - notification-service

  # Auth Service
  auth-service:
    build: ./services/auth-service
    container_name: auth-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://auth-postgres:5432/auth_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_REDIS_HOST=auth-redis
      - SPRING_REDIS_PORT=6379
    depends_on:
      - auth-postgres
      - auth-redis
    networks:
      - doordash-network

  auth-postgres:
    image: postgres:14-alpine
    container_name: auth-postgres
    environment:
      - POSTGRES_DB=auth_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - auth-postgres-data:/var/lib/postgresql/data
    networks:
      - doordash-network

  auth-redis:
    image: redis:7-alpine
    container_name: auth-redis
    volumes:
      - auth-redis-data:/data
    networks:
      - doordash-network

  # Restaurant Service
  restaurant-service:
    build: ./services/restaurant-service
    container_name: restaurant-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://restaurant-postgres:5432/restaurant_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_REDIS_HOST=restaurant-redis
      - SPRING_REDIS_PORT=6379
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://auth-service:8081/oauth2/jwks
    depends_on:
      - restaurant-postgres
      - restaurant-redis
      - auth-service
    networks:
      - doordash-network

  restaurant-postgres:
    image: postgres:14-alpine
    container_name: restaurant-postgres
    environment:
      - POSTGRES_DB=restaurant_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - restaurant-postgres-data:/var/lib/postgresql/data
    networks:
      - doordash-network

  restaurant-redis:
    image: redis:7-alpine
    container_name: restaurant-redis
    volumes:
      - restaurant-redis-data:/data
    networks:
      - doordash-network

  # Order Service
  order-service:
    build: ./services/order-service
    container_name: order-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://order-postgres:5432/order_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_REDIS_HOST=order-redis
      - SPRING_REDIS_PORT=6379
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://auth-service:8081/oauth2/jwks
      - RESTAURANT_SERVICE_URL=http://restaurant-service:8082
      - USER_SERVICE_URL=http://user-service:8084
      - PAYMENT_SERVICE_URL=http://payment-service:8086
    depends_on:
      - order-postgres
      - order-redis
      - kafka
      - auth-service
      - restaurant-service
      - user-service
      - payment-service
    networks:
      - doordash-network

  order-postgres:
    image: postgres:14-alpine
    container_name: order-postgres
    environment:
      - POSTGRES_DB=order_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - order-postgres-data:/var/lib/postgresql/data
    networks:
      - doordash-network

  order-redis:
    image: redis:7-alpine
    container_name: order-redis
    volumes:
      - order-redis-data:/data
    networks:
      - doordash-network

  # User Service
  user-service:
    build: ./services/user-service
    container_name: user-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-postgres:5432/user_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_REDIS_HOST=user-redis
      - SPRING_REDIS_PORT=6379
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://auth-service:8081/oauth2/jwks
    depends_on:
      - user-postgres
      - user-redis
      - auth-service
    networks:
      - doordash-network

  user-postgres:
    image: postgres:14-alpine
    container_name: user-postgres
    environment:
      - POSTGRES_DB=user_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - user-postgres-data:/var/lib/postgresql/data
    networks:
      - doordash-network

  user-redis:
    image: redis:7-alpine
    container_name: user-redis
    volumes:
      - user-redis-data:/data
    networks:
      - doordash-network

  # Delivery Service
  delivery-service:
    build: ./services/delivery-service
    container_name: delivery-service
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://delivery-postgres:5432/delivery_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_REDIS_HOST=delivery-redis
      - SPRING_REDIS_PORT=6379
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://auth-service:8081/oauth2/jwks
      - ORDER_SERVICE_URL=http://order-service:8083
      - RESTAURANT_SERVICE_URL=http://restaurant-service:8082
      - USER_SERVICE_URL=http://user-service:8084
    depends_on:
      - delivery-postgres
      - delivery-redis
      - kafka
      - auth-service
      - order-service
      - restaurant-service
      - user-service
    networks:
      - doordash-network

  delivery-postgres:
    image: postgres:14-alpine
    container_name: delivery-postgres
    environment:
      - POSTGRES_DB=delivery_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - delivery-postgres-data:/var/lib/postgresql/data
    networks:
      - doordash-network

  delivery-redis:
    image: redis:7-alpine
    container_name: delivery-redis
    volumes:
      - delivery-redis-data:/data
    networks:
      - doordash-network

  # Payment Service
  payment-service:
    build: ./services/payment-service
    container_name: payment-service
    ports:
      - "8086:8086"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://payment-postgres:5432/payment_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_REDIS_HOST=payment-redis
      - SPRING_REDIS_PORT=6379
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://auth-service:8081/oauth2/jwks
    depends_on:
      - payment-postgres
      - payment-redis
      - kafka
      - auth-service
    networks:
      - doordash-network

  payment-postgres:
    image: postgres:14-alpine
    container_name: payment-postgres
    environment:
      - POSTGRES_DB=payment_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - payment-postgres-data:/var/lib/postgresql/data
    networks:
      - doordash-network

  payment-redis:
    image: redis:7-alpine
    container_name: payment-redis
    volumes:
      - payment-redis-data:/data
    networks:
      - doordash-network

  # Notification Service
  notification-service:
    build: ./services/notification-service
    container_name: notification-service
    ports:
      - "8087:8087"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://notification-postgres:5432/notification_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_REDIS_HOST=notification-redis
      - SPRING_REDIS_PORT=6379
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://auth-service:8081/oauth2/jwks
    depends_on:
      - notification-postgres
      - notification-redis
      - kafka
      - auth-service
    networks:
      - doordash-network

  notification-postgres:
    image: postgres:14-alpine
    container_name: notification-postgres
    environment:
      - POSTGRES_DB=notification_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - notification-postgres-data:/var/lib/postgresql/data
    networks:
      - doordash-network

  notification-redis:
    image: redis:7-alpine
    container_name: notification-redis
    volumes:
      - notification-redis-data:/data
    networks:
      - doordash-network

  # Kafka and Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - doordash-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - doordash-network

  # Monitoring
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - doordash-network

  grafana:
    image: grafana/grafana:10.0.3
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - doordash-network

  jaeger:
    image: jaegertracing/all-in-one:1.47
    container_name: jaeger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "4317:4317"
      - "4318:4318"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - doordash-network

volumes:
  auth-postgres-data:
  auth-redis-data:
  restaurant-postgres-data:
  restaurant-redis-data:
  order-postgres-data:
  order-redis-data:
  user-postgres-data:
  user-redis-data:
  delivery-postgres-data:
  delivery-redis-data:
  payment-postgres-data:
  payment-redis-data:
  notification-postgres-data:
  notification-redis-data:
  prometheus-data:
  grafana-data:

networks:
  doordash-network:
    driver: bridge