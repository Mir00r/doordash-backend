version: '3.8'

services:
  # Auth Service
  auth-service:
    build: .
    container_name: auth-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_URL=jdbc:postgresql://auth-postgres:5432/auth_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - REDIS_HOST=auth-redis
      - REDIS_PORT=6379
      - JWT_SECRET=mySecretKey123456789012345678901234567890
      - MAIL_HOST=mailhog
      - MAIL_PORT=1025
      - MAIL_USERNAME=
      - MAIL_PASSWORD=
    depends_on:
      - auth-postgres
      - auth-redis
      - mailhog
    networks:
      - auth-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  auth-postgres:
    image: postgres:15-alpine
    container_name: auth-postgres
    environment:
      - POSTGRES_DB=auth_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    networks:
      - auth-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  auth-redis:
    image: redis:7-alpine
    container_name: auth-redis
    ports:
      - "6380:6379"
    volumes:
      - auth_redis_data:/data
    networks:
      - auth-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: auth-mailhog
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI port
    networks:
      - auth-network
    restart: unless-stopped

volumes:
  auth_postgres_data:
  auth_redis_data:

networks:
  auth-network:
    driver: bridge
