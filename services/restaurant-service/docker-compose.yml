version: '3.8'

services:
  restaurant-service:
    build: .
    container_name: restaurant-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/restaurant_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://auth-service:8080/oauth2/jwks
    depends_on:
      - postgres
      - redis
    networks:
      - doordash-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:14-alpine
    container_name: restaurant-postgres
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=restaurant_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - restaurant-postgres-data:/var/lib/postgresql/data
    networks:
      - doordash-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: restaurant-redis
    ports:
      - "6380:6379"
    volumes:
      - restaurant-redis-data:/data
    networks:
      - doordash-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  restaurant-postgres-data:
  restaurant-redis-data:

networks:
  doordash-network:
    external: true