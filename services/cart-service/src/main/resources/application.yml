spring:
  application:
    name: cart-service
  
  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000
      database: 0
  
  # Security Configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${OAUTH_ISSUER_URI:https://auth.doordash.com}
          jwk-set-uri: ${OAUTH_JWK_URI:https://auth.doordash.com/.well-known/jwks.json}

# Server Configuration
server:
  port: 8082
  servlet:
    context-path: /

# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      restaurantService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
  retry:
    instances:
      restaurantService:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2

# Application Specific Properties
app:
  restaurant-service:
    url: ${RESTAURANT_SERVICE_URL:http://localhost:8083}
  cache:
    ttl:
      cart: ${CART_CACHE_TTL:3600}  # 1 hour in seconds